// <auto-generated />
using System;
using APIGrandstream.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIGrandstream.Migrations
{
    [DbContext(typeof(GrandstreamContext))]
    partial class GrandstreamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("APIGrandstream.Models.Andares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Console")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocationsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomePainel")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LocationsId");

                    b.ToTable("Andares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "4 Andar",
                            NomePainel = "Posto 4"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "3 Andar",
                            NomePainel = "Posto 3"
                        },
                        new
                        {
                            Id = 3,
                            Console = "12",
                            Nome = "2 Andar",
                            NomePainel = "Posto 2"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "5 Andar",
                            NomePainel = "Posto 5"
                        });
                });

            modelBuilder.Entity("APIGrandstream.Models.Botao", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Acao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ConfigEventosIdConfigEvento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icone")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdConfigEvento")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texto")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConfigEventosIdConfigEvento");

                    b.ToTable("Botao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acao = "Ligar",
                            Icone = "Ligar",
                            IdConfigEvento = 1,
                            Texto = "Ligar"
                        },
                        new
                        {
                            Id = 2,
                            Acao = "Ligar",
                            Icone = "Ligar",
                            IdConfigEvento = 2,
                            Texto = "Ligar"
                        },
                        new
                        {
                            Id = 3,
                            Acao = "Ligar",
                            Icone = "Ligar",
                            IdConfigEvento = 3,
                            Texto = "Ligar"
                        },
                        new
                        {
                            Id = 4,
                            Acao = "Ligar",
                            Icone = "Ligar",
                            IdConfigEvento = 4,
                            Texto = "Ligar"
                        },
                        new
                        {
                            Id = 5,
                            Acao = "Guest",
                            Icone = "Guest",
                            IdConfigEvento = 1,
                            Texto = "Guest"
                        },
                        new
                        {
                            Id = 6,
                            Acao = "TRR",
                            Icone = "TRR",
                            IdConfigEvento = 2,
                            Texto = "TRR"
                        });
                });

            modelBuilder.Entity("APIGrandstream.Models.ConfigEventos", b =>
                {
                    b.Property<int>("IdConfigEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorPainel")
                        .HasColumnType("TEXT");

                    b.Property<string>("CorTexto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Evento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icone")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeExibicao")
                        .HasColumnType("TEXT");

                    b.Property<int>("Prioridade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Som")
                        .HasColumnType("TEXT");

                    b.HasKey("IdConfigEvento");

                    b.ToTable("ConfigEventos");

                    b.HasData(
                        new
                        {
                            IdConfigEvento = 1,
                            CorPainel = "rgba(255,41,5,1)",
                            CorTexto = "rgba(255,255,255,1)",
                            Evento = "CH Paciente",
                            Icone = "fas fa-user-alt",
                            NomeExibicao = "Paciente",
                            Prioridade = 1,
                            Som = ""
                        },
                        new
                        {
                            IdConfigEvento = 2,
                            CorPainel = "rgba(255,255,13,1)",
                            CorTexto = "rgba(255,255,255,1)",
                            Evento = "CH Auxilio",
                            Icone = "fas fa-user-friends",
                            NomeExibicao = "Auxilio",
                            Prioridade = 2,
                            Som = ""
                        },
                        new
                        {
                            IdConfigEvento = 3,
                            CorPainel = "rgba(64,189,255,1)",
                            CorTexto = "rgba(255,255,255,1)",
                            Evento = "CH Azul",
                            Icone = "fas fa-heartbeat",
                            NomeExibicao = "Cod. Azul",
                            Prioridade = 5,
                            Som = ""
                        },
                        new
                        {
                            IdConfigEvento = 4,
                            CorPainel = "rgba(255,69,0,1)",
                            CorTexto = "rgba(255,255,255,1)",
                            Evento = "Ch Toilete",
                            Icone = "fab fa-accessible-icon",
                            NomeExibicao = "Banheiro",
                            Prioridade = 1,
                            Som = ""
                        },
                        new
                        {
                            IdConfigEvento = 5,
                            CorPainel = "rgba(0,255,0,1)",
                            CorTexto = "rgba(255,255,255,1)",
                            Evento = "Presenca",
                            Icone = "fas fa-user-alt",
                            NomeExibicao = "Presenca",
                            Prioridade = 1,
                            Som = ""
                        });
                });

            modelBuilder.Entity("APIGrandstream.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dispositivo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraInsert")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdElise")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Leito")
                        .HasColumnType("TEXT");

                    b.Property<string>("MotivoFim")
                        .HasColumnType("TEXT");

                    b.Property<string>("TextoEvento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tracelogic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Usuario")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("APIGrandstream.Models.Eventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BotaoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Dispositivo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraFim")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraInsert")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdElise")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Local")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocationsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MotivoFim")
                        .HasColumnType("TEXT");

                    b.Property<string>("TextoEvento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tracelogid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Usuario")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BotaoId");

                    b.HasIndex("LocationsId");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            Dispositivo = "1",
                            HoraFim = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraInicio = new DateTime(2021, 10, 22, 5, 0, 7, 387, DateTimeKind.Unspecified),
                            HoraInsert = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdElise = 1,
                            Local = "Leito 201",
                            TextoEvento = "CH Paciente",
                            Tipo = "CH Paciente",
                            Usuario = "Victor"
                        },
                        new
                        {
                            Id = 9,
                            Dispositivo = "2",
                            HoraFim = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraInicio = new DateTime(2021, 10, 22, 5, 0, 7, 387, DateTimeKind.Unspecified),
                            HoraInsert = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdElise = 1,
                            Local = "Leito 202",
                            TextoEvento = "Presenca",
                            Tipo = "CH Paciente",
                            Usuario = "Artur"
                        },
                        new
                        {
                            Id = 10,
                            Dispositivo = "2",
                            HoraFim = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraInicio = new DateTime(2021, 10, 22, 5, 0, 0, 0, DateTimeKind.Unspecified),
                            HoraInsert = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdElise = 1,
                            Local = "Leito 202",
                            TextoEvento = "Presenca",
                            Tipo = "CH Paciente",
                            Usuario = "Andre"
                        });
                });

            modelBuilder.Entity("APIGrandstream.V1.Models.Locations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AndaresId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BotaoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdAndar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdElise")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ramal")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AndaresId");

                    b.HasIndex("BotaoId");

                    b.HasIndex("EventoId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 201",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 2,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 202",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 3,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 203",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 4,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 204",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 5,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 205",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 6,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 206",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 7,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 207",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 8,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 208",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 9,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 209",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 10,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 210",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 11,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 211",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 12,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 212",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 13,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 213",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 14,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 214",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 15,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 215",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 16,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 216",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 17,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 217",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 18,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 218",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 19,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 219",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 20,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 220",
                            Ramal = 2201
                        },
                        new
                        {
                            Id = 21,
                            IdAndar = 3,
                            IdElise = 1,
                            Nome = "Leito 221",
                            Ramal = 2201
                        });
                });

            modelBuilder.Entity("APIGrandstream.Models.Andares", b =>
                {
                    b.HasOne("APIGrandstream.V1.Models.Locations", "Locations")
                        .WithMany()
                        .HasForeignKey("LocationsId");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("APIGrandstream.Models.Botao", b =>
                {
                    b.HasOne("APIGrandstream.Models.ConfigEventos", "ConfigEventos")
                        .WithMany()
                        .HasForeignKey("ConfigEventosIdConfigEvento");

                    b.Navigation("ConfigEventos");
                });

            modelBuilder.Entity("APIGrandstream.Models.Eventos", b =>
                {
                    b.HasOne("APIGrandstream.Models.Botao", "Botao")
                        .WithMany()
                        .HasForeignKey("BotaoId");

                    b.HasOne("APIGrandstream.V1.Models.Locations", null)
                        .WithMany("Eventos")
                        .HasForeignKey("LocationsId");

                    b.Navigation("Botao");
                });

            modelBuilder.Entity("APIGrandstream.V1.Models.Locations", b =>
                {
                    b.HasOne("APIGrandstream.Models.Andares", null)
                        .WithMany("Leitos")
                        .HasForeignKey("AndaresId");

                    b.HasOne("APIGrandstream.Models.Botao", "Botao")
                        .WithMany()
                        .HasForeignKey("BotaoId");

                    b.HasOne("APIGrandstream.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId");

                    b.Navigation("Botao");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("APIGrandstream.Models.Andares", b =>
                {
                    b.Navigation("Leitos");
                });

            modelBuilder.Entity("APIGrandstream.V1.Models.Locations", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
